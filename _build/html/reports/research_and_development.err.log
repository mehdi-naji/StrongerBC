Traceback (most recent call last):
  File "c:\Users\mehdi\miniconda3\lib\site-packages\jupyter_cache\executors\utils.py", line 58, in single_nb_execution
    executenb(
  File "c:\Users\mehdi\miniconda3\lib\site-packages\nbclient\client.py", line 1305, in execute
    return NotebookClient(nb=nb, resources=resources, km=km, **kwargs).execute()
  File "c:\Users\mehdi\miniconda3\lib\site-packages\jupyter_core\utils\__init__.py", line 166, in wrapped
    return loop.run_until_complete(inner)
  File "c:\Users\mehdi\miniconda3\lib\asyncio\base_events.py", line 649, in run_until_complete
    return future.result()
  File "c:\Users\mehdi\miniconda3\lib\site-packages\nbclient\client.py", line 705, in async_execute
    await self.async_execute_cell(
  File "c:\Users\mehdi\miniconda3\lib\site-packages\nbclient\client.py", line 1058, in async_execute_cell
    await self._check_raise_for_error(cell, cell_index, exec_reply)
  File "c:\Users\mehdi\miniconda3\lib\site-packages\nbclient\client.py", line 914, in _check_raise_for_error
    raise CellExecutionError.from_cell_and_msg(cell, exec_reply_content)
nbclient.exceptions.CellExecutionError: An error occurred while executing the following cell:
------------------

df1 = pd.read_csv("~/strongerbc/data/research_and_development_1.csv")
df = df1[df1['Year'] >= 2000]
app = dash.Dash(__name__)

# Labels and Steps of Year Range
labels = {str(year): str(year) for year in range(df['Year'].min(), df['Year'].max() + 1 , 5)}
steps = {str(year): '' for year in range(df['Year'].min(), df['Year'].max() + 1)}
marks = {**steps, **labels}


app.layout = html.Div([
    html.Div([
        dcc.Graph(id='value-graph')
    ], style={'width': '100%', 'display': 'inline-block'}),
    html.Div([
        dcc.RangeSlider(
            id='year-slider',
            min=df['Year'].min(),
            max=df['Year'].max(),
            value=[df['Year'].min(), df['Year'].max()],
            marks=marks,
            step=None
        ),
        dcc.Dropdown(
            id='geo-dropdown',
            options=[{'label': i, 'value': i} for i in df['GEO'].unique()],
            value=df['GEO'].unique()[0]
        ),
        dcc.Dropdown(
            id='Funder-dropdown',
            options=[{'label': i, 'value': i} for i in df['Funder'].unique()],
            value=df['Funder'].unique()[0]
        ),
        dcc.Dropdown(
            id='Performer-dropdown',
            options=[{'label': i, 'value': i} for i in df['Performer'].unique()],
            value=df['Performer'].unique()[0]
        ),
        dcc.Dropdown(
            id='ScienceType-dropdown',
            options=[{'label': i, 'value': i} for i in df['Science type'].unique()],
            value=df['Science type'].unique()[0]
        ),
        dcc.Dropdown(
            id='Prices-dropdown',
            options=[{'label': i, 'value': i} for i in df['Prices'].unique()],
            value=df['Prices'].unique()[0]
        )
    ], style={'width': '100%', 'display': 'inline-block'}),
])

@app.callback(
    Output('value-graph', 'figure'),
    [Input('year-slider', 'value'),
     Input('geo-dropdown', 'value'),
     Input('Funder-dropdown', 'value'),
     Input('Performer-dropdown', 'value'),
     Input('ScienceType-dropdown', 'value'),
     Input('Prices-dropdown', 'value')],
)
def update_graph(year_range, geo_value, Funder_value, Performer_value, ScienceType_value, Prices_value):
    dff = df[(df['Year'] >= year_range[0]) & 
             (df['Year'] <= year_range[1]) & 
             (df['GEO'] == geo_value)      & 
             (df['Funder'] == Funder_value)&
             (df['Performer'] == Performer_value) &
             (df['Science type'] == ScienceType_value) &
             (df['Prices'] == Prices_value)]

    fig = px.line(dff, x="Year", y="VALUE", title='Investment in Innovation', template='plotly_white')
    fig.update_traces(mode='markers+lines')
    fig.update_yaxes(title_text=f'{Prices_value} (in millions $ )')
    fig.update_layout(
    title={
        'text': "Trends in Innovation Investment",
        'y':0.9,
        'x':0.5,
        'xanchor': 'center',
        'yanchor': 'top'})

    return fig

if __name__ == '__main__':
    app.run_server(debug=True)
------------------


[1;31m---------------------------------------------------------------------------[0m
[1;31mOSError[0m                                   Traceback (most recent call last)
Cell [1;32mIn[2], line 84[0m
[0;32m     81[0m     [38;5;28;01mreturn[39;00m fig
[0;32m     83[0m [38;5;28;01mif[39;00m [38;5;18m__name__[39m [38;5;241m==[39m [38;5;124m'[39m[38;5;124m__main__[39m[38;5;124m'[39m:
[1;32m---> 84[0m     [43mapp[49m[38;5;241;43m.[39;49m[43mrun_server[49m[43m([49m[43mdebug[49m[38;5;241;43m=[39;49m[38;5;28;43;01mTrue[39;49;00m[43m)[49m

File [1;32m~\miniconda3\lib\site-packages\dash\dash.py:2175[0m, in [0;36mDash.run_server[1;34m(self, *args, **kwargs)[0m
[0;32m   2169[0m [38;5;28;01mdef[39;00m [38;5;21mrun_server[39m([38;5;28mself[39m, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs):
[0;32m   2170[0m [38;5;250m    [39m[38;5;124;03m"""`run_server` is a deprecated alias of `run` and may be removed in a[39;00m
[0;32m   2171[0m [38;5;124;03m    future version. We recommend using `app.run` instead.[39;00m
[0;32m   2172[0m 
[0;32m   2173[0m [38;5;124;03m    See `app.run` for usage information.[39;00m
[0;32m   2174[0m [38;5;124;03m    """[39;00m
[1;32m-> 2175[0m     [38;5;28mself[39m[38;5;241m.[39mrun([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs)

File [1;32m~\miniconda3\lib\site-packages\dash\dash.py:2066[0m, in [0;36mDash.run[1;34m(self, host, port, proxy, debug, jupyter_mode, jupyter_width, jupyter_height, jupyter_server_url, dev_tools_ui, dev_tools_props_check, dev_tools_serve_dev_bundles, dev_tools_hot_reload, dev_tools_hot_reload_interval, dev_tools_hot_reload_watch_interval, dev_tools_hot_reload_max_retry, dev_tools_silence_routes_logging, dev_tools_prune_errors, **flask_run_options)[0m
[0;32m   2063[0m             extra_files[38;5;241m.[39mappend(path)
[0;32m   2065[0m [38;5;28;01mif[39;00m jupyter_dash[38;5;241m.[39mactive:
[1;32m-> 2066[0m     [43mjupyter_dash[49m[38;5;241;43m.[39;49m[43mrun_app[49m[43m([49m
[0;32m   2067[0m [43m        [49m[38;5;28;43mself[39;49m[43m,[49m
[0;32m   2068[0m [43m        [49m[43mmode[49m[38;5;241;43m=[39;49m[43mjupyter_mode[49m[43m,[49m
[0;32m   2069[0m [43m        [49m[43mwidth[49m[38;5;241;43m=[39;49m[43mjupyter_width[49m[43m,[49m
[0;32m   2070[0m [43m        [49m[43mheight[49m[38;5;241;43m=[39;49m[43mjupyter_height[49m[43m,[49m
[0;32m   2071[0m [43m        [49m[43mhost[49m[38;5;241;43m=[39;49m[43mhost[49m[43m,[49m
[0;32m   2072[0m [43m        [49m[43mport[49m[38;5;241;43m=[39;49m[43mport[49m[43m,[49m
[0;32m   2073[0m [43m        [49m[43mserver_url[49m[38;5;241;43m=[39;49m[43mjupyter_server_url[49m[43m,[49m
[0;32m   2074[0m [43m    [49m[43m)[49m
[0;32m   2075[0m [38;5;28;01melse[39;00m:
[0;32m   2076[0m     [38;5;28mself[39m[38;5;241m.[39mserver[38;5;241m.[39mrun(host[38;5;241m=[39mhost, port[38;5;241m=[39mport, debug[38;5;241m=[39mdebug, [38;5;241m*[39m[38;5;241m*[39mflask_run_options)

File [1;32m~\miniconda3\lib\site-packages\dash\_jupyter.py:401[0m, in [0;36mJupyterDash.run_app[1;34m(self, app, mode, width, height, host, port, server_url)[0m
[0;32m    399[0m     display(HTML(msg))
[0;32m    400[0m [38;5;28;01melse[39;00m:
[1;32m--> 401[0m     [38;5;28;01mraise[39;00m final_error

File [1;32m~\miniconda3\lib\site-packages\dash\_jupyter.py:388[0m, in [0;36mJupyterDash.run_app[1;34m(self, app, mode, width, height, host, port, server_url)[0m
[0;32m    385[0m         [38;5;28;01mraise[39;00m err
[0;32m    387[0m [38;5;28;01mtry[39;00m:
[1;32m--> 388[0m     [43mwait_for_app[49m[43m([49m[43m)[49m
[0;32m    390[0m     [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39min_colab:
[0;32m    391[0m         JupyterDash[38;5;241m.[39m_display_in_colab(dashboard_url, port, mode, width, height)

File [1;32m~\miniconda3\lib\site-packages\retrying.py:56[0m, in [0;36mretry.<locals>.wrap.<locals>.wrapped_f[1;34m(*args, **kw)[0m
[0;32m     54[0m [38;5;129m@six[39m[38;5;241m.[39mwraps(f)
[0;32m     55[0m [38;5;28;01mdef[39;00m [38;5;21mwrapped_f[39m([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkw):
[1;32m---> 56[0m     [38;5;28;01mreturn[39;00m Retrying([38;5;241m*[39mdargs, [38;5;241m*[39m[38;5;241m*[39mdkw)[38;5;241m.[39mcall(f, [38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkw)

File [1;32m~\miniconda3\lib\site-packages\retrying.py:266[0m, in [0;36mRetrying.call[1;34m(self, fn, *args, **kwargs)[0m
[0;32m    263[0m [38;5;28;01mif[39;00m [38;5;28mself[39m[38;5;241m.[39mstop(attempt_number, delay_since_first_attempt_ms):
[0;32m    264[0m     [38;5;28;01mif[39;00m [38;5;129;01mnot[39;00m [38;5;28mself[39m[38;5;241m.[39m_wrap_exception [38;5;129;01mand[39;00m attempt[38;5;241m.[39mhas_exception:
[0;32m    265[0m         [38;5;66;03m# get() on an attempt with an exception should cause it to be raised, but raise just in case[39;00m
[1;32m--> 266[0m         [38;5;28;01mraise[39;00m [43mattempt[49m[38;5;241;43m.[39;49m[43mget[49m[43m([49m[43m)[49m
[0;32m    267[0m     [38;5;28;01melse[39;00m:
[0;32m    268[0m         [38;5;28;01mraise[39;00m RetryError(attempt)

File [1;32m~\miniconda3\lib\site-packages\retrying.py:301[0m, in [0;36mAttempt.get[1;34m(self, wrap_exception)[0m
[0;32m    299[0m         [38;5;28;01mraise[39;00m RetryError([38;5;28mself[39m)
[0;32m    300[0m     [38;5;28;01melse[39;00m:
[1;32m--> 301[0m         [43msix[49m[38;5;241;43m.[39;49m[43mreraise[49m[43m([49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvalue[49m[43m[[49m[38;5;241;43m0[39;49m[43m][49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvalue[49m[43m[[49m[38;5;241;43m1[39;49m[43m][49m[43m,[49m[43m [49m[38;5;28;43mself[39;49m[38;5;241;43m.[39;49m[43mvalue[49m[43m[[49m[38;5;241;43m2[39;49m[43m][49m[43m)[49m
[0;32m    302[0m [38;5;28;01melse[39;00m:
[0;32m    303[0m     [38;5;28;01mreturn[39;00m [38;5;28mself[39m[38;5;241m.[39mvalue

File [1;32m~\miniconda3\lib\site-packages\six.py:719[0m, in [0;36mreraise[1;34m(tp, value, tb)[0m
[0;32m    717[0m     [38;5;28;01mif[39;00m value[38;5;241m.[39m__traceback__ [38;5;129;01mis[39;00m [38;5;129;01mnot[39;00m tb:
[0;32m    718[0m         [38;5;28;01mraise[39;00m value[38;5;241m.[39mwith_traceback(tb)
[1;32m--> 719[0m     [38;5;28;01mraise[39;00m value
[0;32m    720[0m [38;5;28;01mfinally[39;00m:
[0;32m    721[0m     value [38;5;241m=[39m [38;5;28;01mNone[39;00m

File [1;32m~\miniconda3\lib\site-packages\retrying.py:251[0m, in [0;36mRetrying.call[1;34m(self, fn, *args, **kwargs)[0m
[0;32m    248[0m     [38;5;28mself[39m[38;5;241m.[39m_before_attempts(attempt_number)
[0;32m    250[0m [38;5;28;01mtry[39;00m:
[1;32m--> 251[0m     attempt [38;5;241m=[39m Attempt(fn([38;5;241m*[39margs, [38;5;241m*[39m[38;5;241m*[39mkwargs), attempt_number, [38;5;28;01mFalse[39;00m)
[0;32m    252[0m [38;5;28;01mexcept[39;00m:
[0;32m    253[0m     tb [38;5;241m=[39m sys[38;5;241m.[39mexc_info()

File [1;32m~\miniconda3\lib\site-packages\dash\_jupyter.py:379[0m, in [0;36mJupyterDash.run_app.<locals>.wait_for_app[1;34m()[0m
[0;32m    377[0m     [38;5;28;01mif[39;00m res [38;5;241m!=[39m [38;5;124m"[39m[38;5;124mAlive[39m[38;5;124m"[39m:
[0;32m    378[0m         url [38;5;241m=[39m [38;5;124mf[39m[38;5;124m"[39m[38;5;124mhttp://[39m[38;5;132;01m{[39;00mhost[38;5;132;01m}[39;00m[38;5;124m:[39m[38;5;132;01m{[39;00mport[38;5;132;01m}[39;00m[38;5;124m"[39m
[1;32m--> 379[0m         [38;5;28;01mraise[39;00m [38;5;167;01mOSError[39;00m(
[0;32m    380[0m             [38;5;124mf[39m[38;5;124m"[39m[38;5;124mAddress [39m[38;5;124m'[39m[38;5;132;01m{[39;00murl[38;5;132;01m}[39;00m[38;5;124m'[39m[38;5;124m already in use.[39m[38;5;130;01m\n[39;00m[38;5;124m"[39m
[0;32m    381[0m             [38;5;124m"[39m[38;5;124m    Try passing a different port to run_server.[39m[38;5;124m"[39m
[0;32m    382[0m         )
[0;32m    383[0m [38;5;28;01mexcept[39;00m requests[38;5;241m.[39mConnectionError [38;5;28;01mas[39;00m err:
[0;32m    384[0m     _get_error()

[1;31mOSError[0m: Address 'http://127.0.0.1:8050' already in use.
    Try passing a different port to run_server.

